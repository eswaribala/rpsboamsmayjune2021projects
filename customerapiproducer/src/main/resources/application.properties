server.port=6060
spring.application.name=Customer-API
spring.datasource.url=jdbc:mysql://localhost:3306/boajunecustomerdb?useSSL=true
spring.datasource.username=root
spring.datasource.password=vignesh
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#data source connection pool
#spring.datasource.hikari.connection-timeout=20000
#spring.datasource.hikari.minimum-idle=5
#spring.datasource.hikari.maximum-pool-size=12
#spring.datasource.hikari.idle-timeout=300000
#spring.datasource.hikari.max-lifetime=1200000
# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database=default
spring.jpa.show-sql=true
# DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
spring.datasource.continue-on-error=false
spring.datasource.generate-unique-name=false
spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
spring.jackson.serialization.fail-on-empty-beans=false

#graphql.servlet.mapping: /apis/graphql
graphql.tools.schema-location-pattern: **/*.graphqls
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
#management.endpoint.prometheus.enabled=true
#management.endpoints.web.exposure.include=prometheus,info,health

#jaegar
#opentracing.jaeger.udp-sender.host=host.docker.internal
#opentracing.jaeger.udp-sender.port=6831
#opentracing.jaeger.const-sampler.decision=true
#opentracing.jaeger.enabled=true
#opentracing.jaeger.log-spans=true
#opentracing.jaeger.service-name=Customer-API

#spring.zipkin.base-url=http://localhost:9411/
#spring.sleuth.sampler.probability=1

#kafka
#spring.cloud.stream.kafka.binder.zkNodes=kafka
#spring.cloud.stream.kafka.binder.brokers=kafka
spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.autoCreateTopics=false
#spring.cloud.stream.bindings.springCloudBusInput=messagetopic
#spring.cloud.stream.bindings.springCloudBusOutput=messagetopic
spring.cloud.stream.bindings.customer-out.destination=boa-customers
spring.cloud.stream.bindings.customer-out.content-type=application/json

